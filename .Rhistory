glicemia = dados$glicemia
poder.teste.chisq.media = function(amostra, alpha = .05, sigma_zero)
{
vari = var(amostra)
df = length(amostra) - 1
k1 = qchisq(p = (alpha / 2), df = df)
k2 = qchisq(p = 1 -(alpha / 2), df = df)
beta = pchisq(q = (sigma_zero*k1/vari),
df = df) + pchisq(q = (sigma_zero*k2/vari),
df = df, lower.tail = FALSE)
poder = 1 - beta
results = list(poder = poder, beta = beta, critico1 = k1, critico2 = k2)
print(results)
}
glicemia2 = glicemia*glicemia
poder.teste.chisq.media(amostra = glicemia2, sigma_zero = var(glicemia2))
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia) - 5)
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia))
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia) - 5)
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia) + 5)
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia))
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia))
glicemia2 = glicemia*glicemia
poder.teste.chisq.media(glicemia, alpha = .01, sigma_zero = var(glicemia))
poder.teste.chisq.media(glicemia, sigma_zero = var(glicemia))
poder.teste.chisq.media(glicemia, alpha = .01, sigma_zero = var(glicemia))
IC.media = function(x, alpha = .05)
{
sd = sqrt(var(x))
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sd)*sd*(1/raizn)
Infimo = mean(x) - termo
Supremo = mean(x) + termo
print(paste("(", Infimo, "; ", Supremo, ")"))
}
x = rnorm(n = 100, mean = 2)
IC.media(x = x)
IC.media = function(x, alpha = .05)
{
sd = sqrt(var(x))
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sd)*sd*(1/raizn)
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("(", Infimo, "; ", Supremo, ")"))
}
x = rnorm(n = 100, mean = 2)
IC.media(x = x)
amostra=c(10,12,13.4,15.2,9.7,10.5,12,15.7,18,17.6)
IC.media(x = amostra)
var(amostra)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sd)*sqrt(sigma)*(1/raizn)
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("(", Infimo, "; ", Supremo, ")"))
}
IC.media(x = amostra)
IC.media(x = amostra, sigma = 5)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sqrt(sigma))*sqrt(sigma)*(1/raizn)
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("(", Infimo, "; ", Supremo, ")"))
}
IC.media(x = amostra, sigma = 5)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sqrt(sigma))*sqrt(sigma)*(1/raizn)
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"))
print(termo)
}
IC.media(x = amostra, sigma = 5)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sqrt(sigma))*sqrt(sigma)/raizn
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"))
print(termo)
}
IC.media(x = amostra, sigma = 5)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sqrt(sigma))*sqrt(sigma)/raizn
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
print(termo)
}
IC.media(x = x)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(alpha/2, sd = sqrt(sigma))*sqrt(sigma)/raizn
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
print(termo)
print(qnorm(alpha/2, sd = sqrt(sigma)))
}
IC.media(x = amostra, sigma = 5)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(1 - alpha/2, sd = sqrt(sigma))*sqrt(sigma)/raizn
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
print(termo)
print(qnorm(alpha/2, sd = sqrt(sigma)))
}
IC.media(x = amostra, sigma = 5)
IC.media(x = amostra, sigma = 5)
IC.media(x = amostra, sigma = 5)
IC.media(x = amostra, sigma = 5)
IC.media = function(x, alpha = .05, sigma)
{
raizn = sqrt(length(x))
termo = qnorm(1 - alpha/2, sd = sqrt(sigma))*sqrt(sigma)/raizn
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
print(termo)
print(qnorm(1 - alpha/2, sd = sqrt(sigma)))
}
IC.media(x = amostra, sigma = 5)
setwd("C:/Users/pedro/Desktop/metodoscomputacionaisII/material P2")
dados = read.table("Base saude.txt")
dados
dados = read.table("Base saude.txt", header = TRUE)
dados
dados = read.table("Base saude.txt", header = TRUE, na = 9)
dados
IC.media(dados$Idade, sigma = 16)
IC.prop = function(p, alpha = .05)
{
p = mean(x)
termo = qnorm(1 - alpha/2, sd = sd(x))*sqrt((p*(1-p)/n))
Infimo = p - termo
Supremo = p + termo
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
print(termo)
}
IC.vari = function(x, alpha = .05)
{
nmenosum = length(x) - 1
sdois = var(x)
Infimo = sdois*nmenosum/qchisq(1 - alpha/2, df = nmenosum)
Supremo = sdois*nmenosum/qchisq(alpha/2, df = nmenosum)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
}
IC.vari(dados$Estatura)
dados$Estatura
IC.vari(as.numeric(dados$Estatura))
dados$Estatura = as.double(dados$Estatura)
dados$Estatura
IC.vari(dados$Estatura)
IC.vari = function(x, alpha = .05)
{
nmenosum = length(x) - 1
sdois = var(x, na.rm = TRUE)
Infimo = sdois*nmenosum/qchisq(1 - alpha/2, df = nmenosum)
Supremo = sdois*nmenosum/qchisq(alpha/2, df = nmenosum)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
}
IC.vari(dados$Estatura)
data = readRDS("cafe.rds")
IC.media(data$Peso, sigma = var(data$Peso))
IC.media(data$Peso, sigma = 12**2)
IC.media = function(x, alpha = .05, sigma = var(x, na.rm = TRUE))
{
raizn = sqrt(length(x))
termo = qnorm(1 - alpha/2, sd = sqrt(sigma))*sqrt(sigma)/raizn
Infimo = round(mean(x) - termo, digits = 3)
Supremo = round(mean(x) + termo, digits = 3)
print(paste("[", Infimo, "; ", Supremo, "]"), sep = "")
print(termo)
print(qnorm(1 - alpha/2, sd = sqrt(sigma)))
}
IC.media(data$Peso, sigma = 12**2)
library(ggplot2)
library(dplyr)
data %>%
ggplot(aes(x = Peso))+
geom_histogram()
library(dplyr)
install.packages("dplyr")
library(dplyr)
data %>%
ggplot(aes(x = Peso))+
geom_histogram()
library(ggplot2)
data %>%
ggplot(aes(x = Peso))+
geom_histogram()
data %>%
ggplot(aes(x = Peso))+
geom_histogram(binwidth = 10)
data %>%
ggplot(aes(x = Peso))+
geom_histogram(binwidth = 5)
shapiro.test(data$Peso)
qqnorm(data$Peso)
data %>%
ggplot(aes(x = Peso))+
geom_qq()+
geom_qq_line()
qqnorm(data$Peso)
data %>%
ggplot(aes(sample = Peso))+
geom_qq()+
geom_qq_line
data %>%
ggplot(aes(sample = Peso))+
geom_qq()+
geom_qq_line()
##1
n = 1000
##1
n = 10000
X = rnorm(mean = 10, sd = 5)
X = rnorm(n = n, mean = 10, sd = 5)
Z = (X - 10)/5
library(ggplot2)
library(dplyr)
dados = data.frame(X,Z)
dados %>%
ggplot(aes(x = Z))+
geom_histogram()
dados %>%
ggplot(aes(x = Z))+
geom_histogram()+
stat_function(dnorm, args = list(mean = 0, sd = 1))
dados %>%
ggplot(aes(x = Z))+
geom_histogram()+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1))
dados %>%
ggplot(aes(x = Z))+
geom_histogram()+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "line")
dados %>%
ggplot(aes(x = Z))+
geom_density()+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1), geom = "line")
dados %>%
ggplot(aes(x = Z))+
geom_density()+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "line", size = 2, color = "red" )
dados %>%
ggplot(aes(x = Z))+
geom_histogram()+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "line", size = 2, color = "red" )
dados %>%
ggplot(aes(x = Z))+
geom_density()+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "line", size = 2, color = "red" )
dados %>%
ggplot(aes(x = Z))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "line", size = 2, color = "red" )
S = 2/25 * S
S = ((rnorm(n = n, mean = 10) - 10)**2)/n-1
coisa = 3*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),
geom = "line", size = 2, color = "red" )
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(mean = 0, sd = 1),
geom = "line", size = 2, color = "red" )
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = 2),
geom = "line", size = 2, color = "red" )
S = ((rnorm(n = n, mean = 0) - 0)**2)/n-1
coisa = 3*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = 2),
geom = "line", size = 2, color = "red" )
coisa = 2*S/25
S = ((rnorm(n = n, mean = 0) - 0)**2)/n-1
coisa = 2*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = 2),
geom = "line", size = 2, color = "red" )
## 2
n = 3
S = ((rnorm(n = n, mean = 0) - 0)**2)/n-1
## 2
n = 3
S = ((rnorm(n = n, mean = 0) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
S = ((rnorm(n = n, mean = 0) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
S = ((rnorm(n = n, mean = 0) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
S = ((rnorm(n = n, mean = 0, sd = 5) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
## 2
n = 1000
S = ((rnorm(n = n, mean = 0, sd = 5) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
## 2
n = 3
S = ((rnorm(n = n, mean = 0, sd = 5) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
S = ((rnorm(n = n, mean = 0, sd = 5) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
## 2
n = 3
S = ((rnorm(n = n, mean = 0, sd = 5) - 0)**2)/(n-1)
coisa = (n-1)*S/25
data = data.frame(coisa)
data %>%
ggplot(aes(x = coisa))+
geom_density(color = "blue", size = 2)+
stat_function(fun = dchisq, args = list(df = n - 1),
geom = "line", size = 2, color = "red" )
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE)) {
termo = qnorm(1 - alpha, mean = mean(x), sd = sqrt(var(x)))*sqrt(var(x))/sqrt(length(x))
ifelse(mean(x) > muzero*termo, print(paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, "% de confiança", sep = "")),
print(paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, "% de confiança", sep = "")))
print(termo)
}
amostra = c(520, 492, 512, 534, 500, 490, 512, 515, 495, 510, 511, 502, 501, 498)
RC(x = amostra, muzero = 500)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE)) {
termo = qnorm(1 - alpha, mean = mean(x), sd = sqrt(var(x)))*sqrt(var(x))/sqrt(length(x))
ifelse(mean(x) > muzero*termo, print(paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, " % de confiança", sep = "")),
print(paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, "% de confiança", sep = "")))
print(termo)
}
RC(x = amostra, muzero = 500)
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha, mean = mean(x), sd = sd)*sd/sqrt(length(x))
ifelse(mean(x) > muzero*termo, print(paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, " % de confiança", sep = "")),
print(paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, "% de confiança", sep = "")))
print(termo)
}
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
ifelse(mean(x) > muzero*termo, print(paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, " % de confiança", sep = "")),
print(paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a", alpha, " % de confiança", sep = "")))
print(termo)
}
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
ifelse(mean(x) > muzero*termo, print(paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
print(paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")))
print(termo)
}
amostra = c(520, 492, 512, 534, 500, 490, 512, 515, 495, 510, 511, 502, 501, 498)
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
results = list(Resultado = ifelse(mean(x) > muzero*termo, print(paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
print(paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = ""))),
crítico = muzero + termo)
print(results)
}
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
results = list(Resultado = ifelse(mean(x) > muzero*termo, paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = ""),
paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
crítico = muzero + termo)
print(results)
}
RC(x = amostra, muzero = 500, sd = 12)
RC(x = amostra, muzero = 510, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
results = list(Resultado = ifelse(mean(x) > muzero*termo, paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = ""),
paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
crítico = muzero + termo,
x.barra = mean(x))
print(results)
}
RC(x = amostra, muzero = 510, sd = 12)
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
critico = muzero + termo
results = list(Resultado = ifelse(mean(x) > critico, paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = ""),
paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
crítico = critico,
x.barra = mean(x))
print(results)
}
RC(x = amostra, muzero = 500, sd = 12)
RC(x = amostra, muzero = 505, sd = 12)
RC(x = amostra, muzero = 502, sd = 12)
RC(x = amostra, muzero = 500, sd = 12)
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
critico = muzero + termo
results = list(Resultado = ifelse(mean(x) > critico, paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = ""),
paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
crítico = critico,
Média Amostral = mean(x))
print(results)
}
RC = function(x, alpha = .05, muzero = mean(x, na.rm = TRUE), sd) {
termo = qnorm(1 - alpha)*sd/sqrt(length(x))
critico = muzero + termo
results = list(Resultado = ifelse(mean(x) > critico, paste("Rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = ""),
paste("Não rejeitamos a hipótese nula de que a média populacional é ", muzero, " a ", alpha, " % de confiança", sep = "")),
crítico = critico,
Média = mean(x))
print(results)
}
RC(x = amostra, muzero = 500, sd = 12)
library(ggplot2)
library(dplyr)
data.frame(amostra = amostra) %>%
ggplot(aes(sample = amostra))+
stat_qq()+
stat_qq_line()
amostra = c(507, 510, 503, 505, 506, 505, 506, 500, 506, 518, 512, 502, 508, 508, 500, 502, 509, 500, 504, 496, 498, 507, 502, 501)
data.frame(amostra = amostra) %>%
ggplot(aes(sample = amostra))+
stat_qq()+
stat_qq_line()
t.test(amostra, alternative = "greater", mu = 500)
## Hipo nula de que a media populacional = 500
t.test(amostra, alternative = "greater", mu = 500)
var(amostra)
library(DescTools)
VarTest(amostra, alternative = "two.sided", sigma.squared = 25, conf.level = 0.95)
library(DescTools)
install.packages("DescTools")
library(DescTools)
## testando se é estatísticamente diferente de 25
VarTest(amostra, alternative = "two.sided", sigma.squared = 25, conf.level = 0.95)
proporcao = ifelse(x < 500, 1, 0)
proporcao
proporcao = ifelse(amostra < 500, 1, 0)
proporcao
prop.test(x = proporcao, n = length(proporcao), alternative = "less", conf.level = .95)
prop.test(x = sum(proporcao), n = length(proporcao), alternative = "less", conf.level = .95)
prop.test(x = sum(proporcao), n = length(proporcao), p = .25, alternative = "less", conf.level = .95)
