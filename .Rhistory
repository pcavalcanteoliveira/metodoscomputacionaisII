tempo %>%
ggplot(aes(sample = tempovida, color = Marca)) +
geom_qq() +
stat_qq_line()
tempo %>%
ggplot(aes(sample = tempovida)) +
geom_qq() +
stat_qq_line()+
facet_wrap(~ Marca)
ks.test(x = tempo[Marca == "A",],
y = pnorm, args = list(mean = mean(tempo[Marca == "A",]$tempovida),
sd = sd(tempo[Marca == "A",]$tempovida)))
tempo
ks.test(x = tempo[tempo$Marca == "A",],
y = pnorm, args = list(mean = mean(tempo[tempo$Marca == "A",]$tempovida),
sd = sd(tempo[tempo$Marca == "A",]$tempovida)))
ks.test(x = tempo[tempo$Marca == "A",],
y = pnorm, args = list(mean = mean(tempo$tempovida[tempo$Marca == "A",]),
sd = sd(tempo$tempovida[tempo$Marca == "A",])))
ks.test(x = tempo[tempo$Marca == "A",],
y = pnorm, list(mean = mean(tempo$tempovida[tempo$Marca == "A",]),
sd = sd(tempo$tempovida[tempo$Marca == "A",])))
ks.test(x = tempo[tempo$Marca == "A",],
y = pnorm, mean = mean(tempo$tempovida[tempo$Marca == "A",]),
sd = sd(tempo$tempovida[tempo$Marca == "A",]))
ks.test(x = tempo[tempo$Marca == "A"],
y = pnorm, mean = mean(tempo$tempovida[tempo$Marca == "A"]),
sd = sd(tempo$tempovida[tempo$Marca == "A"]))
ks.test(x = tempo[tempo$Marca == "A",],
y = pnorm, mean = mean(tempo$tempovida[tempo$Marca == "A"]),
sd = sd(tempo$tempovida[tempo$Marca == "A"]))
tempo[tempo$Marca == "A"]
tempo[tempo$Marca == "A",]
ks.test(x = tempo$tempovida[tempo$Marca == "A"],
y = pnorm, mean = mean(tempo$tempovida[tempo$Marca == "A"]),
sd = sd(tempo$tempovida[tempo$Marca == "A"]))
ks.test(x = tempo$tempovida[tempo$Marca == "A"],
y = pnorm, mean = mean(tempo$tempovida[tempo$Marca == "A"]),
sd = sd(tempo$tempovida[tempo$Marca == "A"]))
baseA = tempo %>%
filter(Marca == A)
baseA = tempo %>%
filter(Marca == "A")
baseB = tempo %>%
filter(Marca == "B")
baseC = tempo %>%
filter(Marca == "C")
baseD = tempo %>%
filter(Marca == "D")
ks.test(x = baseA$tempovida,
y = pnorm,
mean = mean(baseA$tempovida),
sd = sd(baseA$tempovida))
baseA %>% ks.test(x = tempovida,
y = pnorm,
mean = mean(tempovida),
sd = sd(tempovida))
ks.test(x = baseA$tempovida,
y = pnorm,
mean = mean(baseA$tempovida),
sd = sd(baseA$tempovida))
ks.test(x = baseB$tempovida,
y = pnorm,
mean = mean(baseB$tempovida),
sd = sd(baseB$tempovida))
ks.test(x = baseC$tempovida,
y = pnorm,
mean = mean(baseC$tempovida),
sd = sd(baseC$tempovida))
ks.test(x = baseD$tempovida,
y = pnorm,
mean = mean(baseD$tempovida),
sd = sd(baseD$tempovida))
aov(tempovida ~ Marca)
aov(tempovida ~ Marca,
data = tempo)
tempo$tempovida = factor(tempo$tempovida)
tempo
tempo = read_csv2("Tempo Vida.csv")
tempo$tempovida
tempo
tempo$Marca = factor(tempo$Marca)
tempo
aov(tempovida ~ Marca,
data = tempo)
ANOVA1 = aov(tempovida ~ Marca,
data = tempo)
summary(ANOVA1)
lawstat::levene.test(y = tempo$tempovida, group = tempo$Marca,
location = "center")
lawstat::levene.test(y = tempo$tempovida, group = tempo$Marca,
location = "mean")
PostHocTest(ANOVA1,
method = "bonferroni")
library(DescTools)
DestTools::PostHocTest(ANOVA1,
method = "bonferroni")
DescTools::PostHocTest(ANOVA1,
method = "bonferroni")
DescTools::PostHocTest(ANOVA1,
method = "duncan")
TukeyHSD(ANOVA1)
tempo %>%
ggplot(aes(sample = tempovida)) +
geom_qq() +
stat_qq_line()+
facet_wrap(~ Marca)
setwd("C:/Users/pedro/Desktop/metodoscomputacionaisII/materialaulaextra2")
library(tidyverse)
alunos = read_csv2("alunos.csv")
alunos
alunos = read_csv2("alunos.csv", delim = ".")
alunos = read_csv2("alunos.csv", sep = ".")
alunos
alunos = read_csv2("alunos.csv",
delim = ",")
alunos = read_csv("alunos.csv")
alunos
ks.test(alunos$tempo,
pexp,
rate = 50)
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram()
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40)
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40) +
stat_function(fun = pexep, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40, stat = ..density.. ) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40, stat = "density") +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40) +
geom_density() +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(binwidth = 40) +
geom_density((aes(y = ..density..))) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(y = ..density..), binwidth = 40) +
geom_density((aes(y = ..density..))) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(y = ..density..), binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..), binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) #+
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 1/50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) #+
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(shape = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = pexp, args = list(rate = 1/50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = dexp, args = list(rate = 1/50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = dexp, args = list(rate = 50))
alunos %>%
ggplot(aes(x = tempo)) +
geom_histogram(aes(x = tempo, y = ..density..),
binwidth = 40) +
stat_function(fun = dexp, args = list(rate = 1/50))
alunos %>%
ggplot(sample(x = tempo)) +
stat_qq() +
qqline()
alunos %>%
ggplot(sample(x = alunos$tempo)) +
stat_qq() +
qqline()
alunos %>%
ggplot(aes(x = alunos$tempo)) +
stat_qq() +
qqline()
alunos %>%
ggplot(aes(x = tempo)) +
stat_qq() +
qqline()
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq() +
qqline()
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq() +
qqline()
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq()
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq() +
stat_qq_line()
ks.test(alunos$tempo,
pexp,
rate = 50)
ks.test(alunos$tempo,
pexp,
rate = 1/50)
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq(qexp, rate = 1/50) +
stat_qq_line()
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq(distribution = stats::qexp, dparams = list(rate = 1/50)) +
stat_qq_line()
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq(distribution = stats::qexp, dparams = list(rate = 1/50)) +
stat_qq_line(distribution = stats::qexp, dparams = list(rate = 1/50))
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq(distribution = stats::qexp, dparams = list(rate = 1/50)) +
stat_qq_line(distribution = stats::qexp, dparams = list(rate = 1/50))
alunos %>%
ggplot(aes(sample = tempo)) +
stat_qq(distribution = qexp, dparams = list(rate = 1/50)) +
stat_qq_line(distribution = qexp, dparams = list(rate = 1/50))
ks.test(alunos$tempo,
pexp,
rate = 1/50)
table(alunos$tempo)
chisq.test(table(alunos$tempo),
p = rep(1/length(table(alunos$tempo),
times = length(table(alunos$tempo)))),
correct = TRUE)
chisq.test(table(alunos$tempo),
p = rep(1/length(table(alunos$tempo)),
times = length(table(alunos$tempo))),
correct = TRUE)
table(alunos$tempo)
qexp(table(alunos$tempo), rate = 1/50)
pexp(table(alunos$tempo), rate = 1/50)
chisq.test(table(alunos$tempo),
p = pexp(table(alunos$tempo), rate = 1/50),
correct = TRUE)
p = pexp(table(alunos$tempo), rate = 1/50)
sum(p)
table(alunos$tempo)
quantile
alunos$quantiltempo = qexp(alunos$tempo, rate = 1/50)
alunos$quantiltempo
alunos$quantiltempo = pexp(alunos$tempo, rate = 1/50)
alunos$quantiltempo
alunos$quantiltempo = dexp(alunos$tempo, rate = 1/50)
alunos$quantiltempo
alunos$quantiltempo = qexp(alunos$quantiltempo, rate = 1/50)
alunos$quantiltempo
alunos$quantiltempo = NULL
a = quantile(alunos$tempo, .25)
a = quantile(table(alunos$tempo), .25)
a
table(alunos$tempo)
tabela = table(alunos$tempo)
tabela
a = quantile(tabela, .25)
a
b = quantile(tabela, .5)
c = quantile(tabela, .75)
d = quantile(tabela, 1)
a
b
c
d
a = quantile(alunos$tempo, .25)
c = quantile(alunos$tempo, .75)
d = quantile(alunos$tempo, 1)
b = quantile(alunos$tempo, .5)
a
b
c
d
alunos$gp = ifelse(alunos$tempo > c, "d",
ifelse(alunos$tempo > b, "c",
ifelse(alunos$tempo > a, "b", "a")))
alunos$gp
table(alunos$gp)
qexp(rate = 1/50, p = .25)
p = c(qexp(rate = 1/50, p = .25),
qexp(rate = 1/50, p = .5),
qexp(rate = 1/50, p = .75),
qexp(rate = 1/50, p = 1))
chisq.test(table(alunos$gp),
p = p,
correct = TRUE)
p
p = c(pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = b),
pexp(rate = 1/50, q = c),
pexp(rate = 1/50, q = d))
alunos$gp = ifelse(alunos$tempo > c, "d",
ifelse(alunos$tempo > b, "c",
ifelse(alunos$tempo > a, "b", "a")))
chisq.test(table(alunos$gp),
p = p,
correct = TRUE)
p
alunos$gp = ifelse(alunos$tempo > c, "d",
ifelse(alunos$tempo > b, "c",
ifelse(alunos$tempo > a, "b", "a")))
alunos$gp
p
p = c(P_a = pexp(rate = 1/50, q = a),
P_b = pexp(rate = 1/50, q = b) - P_a,
P_c = pexp(rate = 1/50, q = c) - P_b,
P_d = pexp(rate = 1/50, q = d) - P_c)
p = c(P_a = pexp(rate = 1/50, q = a),
P_b = pexp(rate = 1/50, q = b),
P_c = pexp(rate = 1/50, q = c),
P_d = pexp(rate = 1/50, q = d))
p
p = c(pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = b) - qexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = c) - pexp(rate = 1/50, q = b) ,
pexp(rate = 1/50, q = d) - pexp(rate = 1/50, q = c))
p = c(pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = b) - pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = c) - pexp(rate = 1/50, q = b) ,
pexp(rate = 1/50, q = d) - pexp(rate = 1/50, q = c))
p
sum(p)
chisq.test(table(alunos$gp),
p = p,
correct = TRUE)
p = round(p, digits = 2)
p
sujm(p)
sum(p)
p = round(p, digits = 1)
p
sum(p)
p = c(pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = b) - pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = c) - pexp(rate = 1/50, q = b) ,
pexp(rate = 1/50, q = d) - pexp(rate = 1/50, q = c))
p = round(p, digits = 3)
p
sum(p)
p = c(pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = b) - pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = c) - pexp(rate = 1/50, q = b) ,
pexp(rate = 1/50, q = d) - pexp(rate = 1/50, q = c) + .012)
p = round(p, digits = 3)
p
sum(p)
p[4] = p[4] + (1 - sum(p))
p
sum(p)
p = c(pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = b) - pexp(rate = 1/50, q = a),
pexp(rate = 1/50, q = c) - pexp(rate = 1/50, q = b) ,
pexp(rate = 1/50, q = d) - pexp(rate = 1/50, q = c))
p = round(p, digits = 3)
p[4] = p[4] + (1 - sum(p))
sum(p)
p
chisq.test(table(alunos$gp),
p = p,
correct = TRUE)
alunos$gpnotas = ifelse(alunos$notas < 3, "A",
ifelse(alunos$notas < 6, "B",
ifelse(alunos$notas < 8, "C", "D")))
chisq.test(table(alunos$gpnotas),
p = c(.25,.25,.25,25),
correct = FALSE)
chisq.test(table(alunos$gpnotas),
p = c(.25,.25,.25,.25),
correct = FALSE)
table(alunos$gpnotas)
## teste de homogeneidade
chisq.test(table(alunos$gpnotas),
p = c(.3,.3,.2,.2),
correct = FALSE)
palt = c(.25,.25,.25,.25)
chisq.test(table(alunos$gp),
p = palt,
correct = TRUE)
table(alunos$gp)
pexp(rate = 1/50, q = c(.25,.5,.75))
pexp(rate = 1/50, q = c(.25,.5,.75, 1))
p = c(pexp(rate = 1/50, Q = .25),
pexp(rate = 1/50, q = .5) - pexp(rate = 1/50, q = .25),
pexp(rate = 1/50, q = .75) - pexp(rate = 1/50, q = .5) ,
pexp(rate = 1/50, q = 1) - pexp(rate = 1/50, q = .75))
p = round(p, digits = 3)
p = c(pexp(rate = 1/50, Q = .25),
pexp(rate = 1/50, q = .5) - pexp(rate = 1/50, q = .25),
pexp(rate = 1/50, q = .75) - pexp(rate = 1/50, q = .5) ,
pexp(rate = 1/50, q = 1) - pexp(rate = 1/50, q = .75))
p = round(p, digits = 3)
p = c(pexp(rate = 1/50, q = .25),
pexp(rate = 1/50, q = .5) - pexp(rate = 1/50, q = .25),
pexp(rate = 1/50, q = .75) - pexp(rate = 1/50, q = .5) ,
pexp(rate = 1/50, q = 1) - pexp(rate = 1/50, q = .75))
p = round(p, digits = 3)
p[4] = p[4] + (1 - sum(p))
sum(p)
p
p = c(pexp(rate = 1/50, q = .25),
pexp(rate = 1/50, q = .5) - pexp(rate = 1/50, q = .25),
pexp(rate = 1/50, q = .75) - pexp(rate = 1/50, q = .5) ,
pexp(rate = 1/50, q = 1) - pexp(rate = 1/50, q = .75))
p = round(p, digits = 3)
p
p = pexep(rate = 1/50, q = c(.25,.5,.75))
p = pexp(rate = 1/50, q = c(.25,.5,.75))
p
a = qexp(rate = 1/50, p = .25)
b = qexp(rate = 1/50, p = .5)
c = qexp(rate = 1/50, p = .75)
d = qexp(rate = 1/50, p = 1)
a
b
c
d
alunos$gp = ifelse(alunos$tempo > c, "d",
ifelse(alunos$tempo > b, "c",
ifelse(alunos$tempo > a, "b", "a")))
p = c(.25,.25,.25,.25)
chisq.test(table(alunos$gp),
p = p,
correct = TRUE)
chisq.test(table(alunos$gpnotas),
p = c(.3,.3,.2,.2),
correct = FALSE)
table(alunos$gpnotas)
glicemia = read_csv2("Glicemia.csv")
glicemia
glicemia = read_csv("Glicemia.csv")
glicemia
anova1 = aov(glicemia ~ grupo, data = glicemia)
summary(anova1)
library(DescTools)
TukeyHSD(anova1)
PostHocTest(anova1, method = "bonferroni")
uni = read_csv2("universidade.csv")
uni
uni = read_csv("universidade.csv")
uni
uni$satisfacao = factor(uni$satisfacao)
uni
anova2 = aov(satisfacao ~ curso, data = uni)
summary(anova2)
uni$satisfacao = ifelse(uni$satisfacao == "Sim", 1, 0)
anova2 = aov(satisfacao ~ curso, data = uni)
summary(anova2)
table(curso$satisfacao)
table(uni$satisfacao)
table(uni$satisfacao, uni$curso)
